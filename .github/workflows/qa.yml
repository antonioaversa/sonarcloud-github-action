name: QA

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  argsInputTest:
    name: >
      'args' input
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run action with args
        uses: ./
        with:
          args: -Dsonar.someArg=aValue -Dsonar.scanner.internal.dumpToFile=./output.properties
        env:
          SONAR_TOKEN: FAKE_TOKEN
      - name: Assert
        run: |
          ./test/assertFileContains ./output.properties "sonar.someArg=aValue"
  projectBaseDirInputTest:
    name: >
      'projectBaseDir' input
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - run: | 
          mkdir -p ./baseDir
      - name: Run action with projectBaseDir
        uses: ./
        with:
          args: -Dsonar.scanner.internal.dumpToFile=./output.properties
          projectBaseDir: ./baseDir
        env:
          SONAR_TOKEN: FAKE_TOKEN
      - name: Assert
        run: |
          ./test/assertFileContains ./output.properties "sonar.projectBaseDir=.*/baseDir"
  sonarTokenRequiredTest:
    name: >
      'SONAR_TOKEN' env var required
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run action without SONAR_TOKEN
        uses: ./
        with:
          args: -Dsonar.scanner.internal.dumpToFile=./output.properties
        continue-on-error: true
      - name: Previous should have failed
        if: ${{ steps.runTest.outcome == 'success'}}
        run: |
          echo "Expected previous step to fail"
          exit 1
  runnerDebugUsedTest:
    name: >
      'RUNNER_DEBUG' is used
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run action with debug mode
        uses: ./
        with:
          args: -Dsonar.scanner.internal.dumpToFile=./output.properties
        env:
          RUNNER_DEBUG: 1
          SONAR_TOKEN: FAKE_TOKEN
      - name: Assert
        run: |
          ./test/assertFileContains ./output.properties "sonar.verbose=true"
  overrideSonarcloudUrlTest:
    name: >
      'SONARCLOUD_URL' is used
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run action with SONARCLOUD_URL
        uses: ./
        with:
          args: -Dsonar.scanner.internal.dumpToFile=./output.properties
        env:
          SONARCLOUD_URL: mirror.sonarcloud.io
          SONAR_TOKEN: FAKE_TOKEN
      - name: Assert
        run: |
          ./test/assertFileContains ./output.properties "sonar.host.url=mirror.sonarcloud.io"
          ./test/assertFileContains ./output.properties "sonar.scanner.sonarcloudUrl=mirror.sonarcloud.io"
